name: Bedrock Integration (manual)

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Set to true to actually run the live Bedrock integration (danger: costs may apply)'
        required: true
        default: 'false'

permissions:
  id-token: write
  contents: read

jobs:
  run-bedrock-integration:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate trigger and secrets
        run: |
          echo "Confirm input: '${{ github.event.inputs.confirm }}'"
          if [ "${{ github.event.inputs.confirm }}" != "true" ]; then
            echo "Integration run not confirmed; aborting."; exit 1
          fi
          # Note: BEDROCK_MODEL_ID is expected as a repository secret. We'll export it in the next step.
          echo "Proceeding; ensure BEDROCK_MODEL_ID repository secret is set before running this workflow."

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Export minimal non-secret env
        run: |
          # Export required non-secret values into the job environment. Keep secrets in the Actions secrets store.
          echo "BEDROCK_MODEL_ID=${{ secrets.BEDROCK_MODEL_ID }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-lock.txt ]; then python -m pip install -r requirements-lock.txt; else python -m pip install -r requirements.txt; fi
          python -m pip install pytest

      - name: Run Bedrock integration tests
        env:
          LLM_PROVIDER: bedrock
        run: |
          pytest -q tests/test_bedrock_integration.py
